"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[743],{30304:function(e){e.exports=JSON.parse('{"functions":[{"name":"FireServer","desc":"Fires the event on the server\\n\\n        ","params":[{"name":"...?","desc":"the parameters to pass to any listeners","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":76,"path":"src/Ansible/Socket.lua"}},{"name":"InvokeServerNonblocking","desc":"Invokes the remote function on the server asynchronously,\\ntaking a callback to handle the return values\\n\\n        ","params":[{"name":"callback","desc":"","lua_type":"(...any) -> ()"},{"name":"...?","desc":"the parameters to pass to the remote function","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":92,"path":"src/Ansible/Socket.lua"}},{"name":"InvokeServer","desc":"Invokes the remote function on the server and blocks on it\\n\\n        ","params":[{"name":"...?","desc":"the parameters to pass to the remote function","lua_type":"any"}],"returns":[{"desc":"the results of the remote function","lua_type":"...any"}],"function_type":"method","realm":["Client"],"yields":true,"source":{"line":110,"path":"src/Ansible/Socket.lua"}},{"name":"FireClient","desc":"Fires the event on the given client\\n\\n        ","params":[{"name":"player","desc":"the player whom to fire the event for","lua_type":"Player"},{"name":"...?","desc":"the parameters to pass to any listeners","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":183,"path":"src/Ansible/Socket.lua"}},{"name":"FireAllClients","desc":"Fires the event on all connected clients\\n\\n        ","params":[{"name":"...?","desc":"the parameters to pass to any listeners","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":193,"path":"src/Ansible/Socket.lua"}},{"name":"InvokeClientNonblocking","desc":"Invokes the remote function on the given client asynchronously\\ntaking a callback to handle the return values\\n\\n        ","params":[{"name":"client","desc":"the client on whom to invoke the remote function","lua_type":"Player"},{"name":"callback","desc":"","lua_type":"(...any) -> ()"},{"name":"...?","desc":"the parameters to pass to the remote function","lua_type":"any\\n"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":206,"path":"src/Ansible/Socket.lua"}},{"name":"InvokeAllClientsNonblocking","desc":"Invokes the remote function on all clients asynchronously\\ntaking a callback to handle the return values\\n\\n        ","params":[{"name":"callback","desc":"","lua_type":"(...any) -> ()"},{"name":"...?","desc":"the parameters to pass to the remote function","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":225,"path":"src/Ansible/Socket.lua"}},{"name":"InvokeClient","desc":"Invokes the remote function on the given client and blocks on it\\n\\n        ","params":[{"name":"client","desc":"the player on whom to invoke the remote function","lua_type":"Player"},{"name":"...?","desc":"the parameters to pass to the remote function","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Server"],"yields":true,"source":{"line":241,"path":"src/Ansible/Socket.lua"}},{"name":"SetCallback","desc":"Sets the callback handler for this side of the socket\'s remote function\\n    ","params":[{"name":"callback","desc":"","lua_type":"(Player, ...any) -> (...any)"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":268,"path":"src/Ansible/Socket.lua"}},{"name":"SetCallback","desc":"Sets the callback handler for this side of the socket\'s remote function\\n    ","params":[{"name":"callback","desc":"","lua_type":"(...any) -> (...any)"}],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":273,"path":"src/Ansible/Socket.lua"}},{"name":"Connect","desc":"Connects a listener to the socket\\n    ","params":[{"name":"listener","desc":"","lua_type":"(Player, ...any) -> ()"}],"returns":[{"desc":"","lua_type":"Connection"}],"function_type":"method","realm":["Server"],"source":{"line":283,"path":"src/Ansible/Socket.lua"}},{"name":"Connect","desc":"Connects a listener to the socket\\n    ","params":[{"name":"listener","desc":"","lua_type":"(...any) -> ()"}],"returns":[{"desc":"","lua_type":"Connection"}],"function_type":"method","realm":["Client"],"source":{"line":289,"path":"src/Ansible/Socket.lua"}},{"name":"Wait","desc":"Blocks on the socket\\n    ","params":[],"returns":[{"desc":"the return values of the listener","lua_type":"(Player, ...any)"}],"function_type":"method","realm":["Server"],"yields":true,"source":{"line":299,"path":"src/Ansible/Socket.lua"}},{"name":"Wait","desc":"Blocks on the socket\\n    ","params":[],"returns":[{"desc":"the return values of the listener","lua_type":"...any"}],"function_type":"method","realm":["Client"],"yields":true,"source":{"line":305,"path":"src/Ansible/Socket.lua"}}],"properties":[],"types":[],"name":"Socket","desc":"Socket abstracts away the underlying RemoteEvents and\\nfunctions as a combination between a RemoteEvent and a RemoteFunction.","source":{"line":17,"path":"src/Ansible/Socket.lua"}}')}}]);